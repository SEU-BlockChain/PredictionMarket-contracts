{
	"id": "0769b89f7580ad0f72b4bcd0b0587441",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"typing.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract typing {\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"typing.sol": {
				"typing": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"typing.sol\":35:57  contract typing {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"typing.sol\":35:57  contract typing {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b8459a46d5ca2d5047144983dc0090de1431f352d21e2739785a983f75f75da764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b8459a46d5ca2d5047144983dc0090de1431f352d21e2739785a983f75f75da764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 GASLIMIT SWAP11 CHAINID 0xD5 0xCA 0x2D POP SELFBALANCE EQ 0x49 DUP4 0xDC STOP SWAP1 0xDE EQ BALANCE RETURN MSTORE 0xD2 0x1E 0x27 CODECOPY PUSH25 0x5A983F75F75DA764736F6C6343000807003300000000000000 ",
							"sourceMap": "35:22:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b8459a46d5ca2d5047144983dc0090de1431f352d21e2739785a983f75f75da764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 GASLIMIT SWAP11 CHAINID 0xD5 0xCA 0x2D POP SELFBALANCE EQ 0x49 DUP4 0xDC STOP SWAP1 0xDE EQ BALANCE RETURN MSTORE 0xD2 0x1E 0x27 CODECOPY PUSH25 0x5A983F75F75DA764736F6C6343000807003300000000000000 ",
							"sourceMap": "35:22:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35,
									"end": 57,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 57,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 57,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35,
									"end": 57,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 57,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 57,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35,
									"end": 57,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 57,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35,
									"end": 57,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35,
									"end": 57,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 57,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 57,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 57,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b8459a46d5ca2d5047144983dc0090de1431f352d21e2739785a983f75f75da764736f6c63430008070033",
									".code": [
										{
											"begin": 35,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35,
											"end": 57,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 57,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 57,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"typing.sol\":\"typing\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"typing.sol\":{\"keccak256\":\"0xc378e8c8b40968cdedc9b870ec2bd7826f805b359ad8ccb6bfea56b1d4c1999f\",\"urls\":[\"bzz-raw://cc2b6d5dc6a61876574b599082b47ced03c4d225058fc67661d9524c1f2e0692\",\"dweb:/ipfs/QmSLVeftPuTd2p6EyeioovE3SC8hbdYUZUqQJfceiyZdze\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> typing.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "typing.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"typing.sol": {
				"ast": {
					"absolutePath": "typing.sol",
					"exportedSymbols": {
						"typing": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "typing",
							"nameLocation": "44:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "35:22:0",
							"usedErrors": []
						}
					],
					"src": "0:59:0"
				},
				"id": 0
			}
		}
	}
}